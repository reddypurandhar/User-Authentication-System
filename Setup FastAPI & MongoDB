Setup FastAPI & MongoDB
===============================================================

-------------------------------------------------------------------------------------> Install Dependencies
-----------------------bash
pip install fastapi uvicorn pymongo bcrypt python-jose[cryptography] python-multipart

-------------------------------------------------------------------------------------> database.py (MongoDB Connection)
-----------------------------------python
from pymongo import MongoClient

client = MongoClient("mongodb://localhost:27017")
db = client["auth_db"]
users_collection = db["users"]

-------------------------------------------------------------------------------------->  models.py (User Models)
---------------------------python

from pydantic import BaseModel

class UserCreate(BaseModel):
    username: str
    password: str

class UserLogin(BaseModel):
    username: str
    password: str

---------------------------------------------------------------------------------------> auth.py (JWT Helper Functions)
---------------------------------python

from datetime import datetime, timedelta
from jose import jwt

SECRET_KEY = "your_secret_key"
ALGORITHM = "HS256"
ACCESS_TOKEN_EXPIRE_MINUTES = 30

def create_access_token(data: dict, expires_delta: timedelta = None):
    to_encode = data.copy()
    expire = datetime.utcnow() + (expires_delta or timedelta(minutes=ACCESS_TOKEN_EXPIRE_MINUTES))
    to_encode.update({"exp": expire})
    return jwt.encode(to_encode, SECRET_KEY, algorithm=ALGORITHM)

----------------------------------------------------------------------------------------> main.py (FastAPI Routes)
---------------------------python

from fastapi import FastAPI, HTTPException
from passlib.context import CryptContext
from auth import create_access_token
from models import UserCreate, UserLogin
from database import users_collection

app = FastAPI()
pwd_context = CryptContext(schemes=["bcrypt"], deprecated="auto")

@app.post("/register")
def register(user: UserCreate):
    if users_collection.find_one({"username": user.username}):
        raise HTTPException(status_code=400, detail="Username already exists")
    hashed_password = pwd_context.hash(user.password)
    users_collection.insert_one({"username": user.username, "password": hashed_password})
    return {"message": "User registered successfully"}

@app.post("/login")
def login(user: UserLogin):
    db_user = users_collection.find_one({"username": user.username})
    if not db_user or not pwd_context.verify(user.password, db_user["password"]):
        raise HTTPException(status_code=401, detail="Invalid credentials")
    token = create_access_token({"sub": user.username})
    return {"access_token": token, "token_type": "bearer"}

================================================================================================> Run Backend
===============bash

uvicorn main:app --reload

then ->Your FastAPI server will run on http://127.0.0.1:8000.
